name: _bulid

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
        default: '3.x'
      dotnet-configuration:
        required: true
        type: string
        default: 'Debug'
      dotnet-target-framework:
        required: true
        type: string
        default: 'net48'
      artifact-name:
        required: true
        type: string
        default: 'threplay_rpi.Debug.net48'

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Python environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: 'ManualGenerator/requirements.txt'

    - name: Restore Python packages
      run: |
        python -m pip install -U pip
        python -m pip install -r ManualGenerator/requirements.txt

    - name: Cache NuGet packages
      uses: actions/cache@v3.3.1
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ inputs.dotnet-target-framework }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ inputs.dotnet-target-framework }}-
          ${{ runner.os }}-nuget-

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3

    - name: Build
      run: >
        msbuild REIMU_Plugins_V2.sln /m /restore /verbosity:minimal
        /p:Configuration=${{ inputs.dotnet-configuration }}
        /p:TargetFrameworks=${{ inputs.dotnet-target-framework }}

    - name: Run FOSSA scan and upload build data
      env:
        FOSSA_API_KEY: 546ea14e5b1c4a901201f2d1cfc44a83   # Push only API token
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.ps1'))
        fossa analyze
        fossa test
      if: inputs.dotnet-configuration == 'Debug'

    - name: Collect artifacts
      id: collect-artifacts
      run: |
        set output_dir=publish\${{ inputs.dotnet-configuration }}\${{ inputs.dotnet-target-framework }}
        CollectArtifacts.bat ${{ inputs.dotnet-configuration }} ${{ inputs.dotnet-target-framework }} %output_dir%
        echo artifact-path=%output_dir% >> %GITHUB_OUTPUT%
      shell: cmd

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ steps.collect-artifacts.outputs.artifact-path }}
